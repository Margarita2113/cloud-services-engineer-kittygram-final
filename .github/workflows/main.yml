   name: CI/CD Workflow

   on:
     push:
       branches:
         - main

   jobs:
     tests:
       runs-on: ubuntu-latest
       steps:
         - name: Checkout code
           uses: actions/checkout@v3
         
         - name: Set up Python
           uses: actions/setup-python@v4
           with:
             python-version: 3.9

         - name: Install dependencies
           run: |
             python -m pip install --upgrade pip 
             pip install -r backend/requirements.txt

         - name: Run tests
           run: |
             python -m pytest

     build_and_push_to_docker_hub:
       runs-on: ubuntu-latest
       needs: tests
       steps:
         - name: Checkout code
           uses: actions/checkout@v3
         
         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v2

         - name: Login to Docker Hub
           uses: docker/login-action@v2
           with:
             username: ${{ secrets.DOCKER_USERNAME }}
             password: ${{ secrets.DOCKER_PASSWORD }}

         - name: Build and push backend
           uses: docker/build-push-action@v4
           with:
             context: ./backend/
             push: true
             tags: ${ secrets.DOCKER_USERNAME }/kittygram_backend:latest

         - name: Build and push frontend
           uses: docker/build-push-action@v4
           with:
             context: ./frontend/
             push: true
             tags: ${ secrets.DOCKER_USERNAME }/kittygram_frontend:latest

     deploy:
       runs-on: ubuntu-latest
       needs: build_and_push_to_docker_hub
       steps:
         - name: Checkout code
           uses: actions/checkout@v3
         
         - name: Copy docker-compose.yml via ssh
           uses: appleboy/scp-action@master
           with:
             host: ${{ secrets.HOST }}
             username: ${{ secrets.USER }}
             key: ${{ secrets.SSH_KEY }}
             source: "docker-compose.production.yml"
             target: "kittygram"

         - name: Deploy on server
           uses: appleboy/ssh-action@master
           with:
             host: ${{ secrets.HOST }}
             username: ${{ secrets.USER }}
             key: ${{ secrets.SSH_KEY }}
             script: |
               cd kittygram
               docker compose pull
               docker compose down
               docker compose up -d
               docker compose exec backend python manage.py migrate
               docker compose exec backend python manage.py collectstatic --noinput
